steps:
# Run Botfront api tests
- name: 'gcr.io/cloud-builders/npm'
  dir: /workspace/api
  args: ["install"]

- name: 'gcr.io/cloud-builders/npm'
  dir: /workspace/api
  args: ["run", "test"]

# Build Botfront Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: [ "build",  "-t", "botfront-local", "."]

# Build Botfront api Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: [ "build", "-t", "botfront-api-local", "./api"]

# Run e2e tests
- name: gcr.io/$PROJECT_ID/docker-compose
  dir: /workspace/botfront/cypress
  args:
    - up
    - --abort-on-container-exit
    - --exit-code-from
    - e2e

# Tag Botfront image
- name: 'gcr.io/cloud-builders/docker'
  args: [ "tag", "botfront-local", "botfront/botfront:latest"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "tag", "botfront-local", "botfront/botfront:$TAG_NAME"]

# Tag Botfront api image
- name: 'gcr.io/cloud-builders/docker'
  args: [ "tag", "botfront-api-local", "botfront/botfront-api:latest"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "tag", "botfront-api-local", "botfront/botfront-api:$TAG_NAME"]

# Build docs
- name: 'gcr.io/cloud-builders/npm'
  dir: './botfront'
  args: [ "run",  "docs:build"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "build",  "-t", "botfront/botfront-docs:branch-$TAG_NAME", "./botfront/docs"]

# Push images to Docker registry
- name: 'gcr.io/cloud-builders/docker'
  args: [ "login",
        "-u", "$_DOCKER_USERNAME",
        "-p", "$_DOCKER_PASSWORD",
  ]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront:$TAG_NAME"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront:latest"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront-api:$TAG_NAME"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront-api:latest"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront-docs:$TAG_NAME"]

- name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "botfront/botfront-docs:latest"]

# Deploy to npmjs
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --ciphertext-file=npmrc.enc
  - --plaintext-file=/root/.npmrc
  - --location=global
  - --keyring=my-keyring
  - --key=npm-key
  volumes:
  - name: 'home'
    path: /root/

- name: 'gcr.io/cloud-builders/npm'
  args:
    - publish
  dir: cli
  env:
  - HOME=/root/
  volumes:
  - name: 'home'
    path: /root/

timeout: 7200s